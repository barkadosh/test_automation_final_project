{"name": "TC01: Login to Grafana", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='Skip']\"}\n  (Session info: chrome=112.0.5615.139)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0039DCE3+50899]\n\t(No symbol) [0x0032E111]\n\t(No symbol) [0x00235588]\n\t(No symbol) [0x002608F9]\n\t(No symbol) [0x00260AFB]\n\t(No symbol) [0x0028F902]\n\t(No symbol) [0x0027B944]\n\t(No symbol) [0x0028E01C]\n\t(No symbol) [0x0027B6F6]\n\t(No symbol) [0x00257708]\n\t(No symbol) [0x0025886D]\n\tGetHandleVerifier [0x00603EAE+2566302]\n\tGetHandleVerifier [0x006392B1+2784417]\n\tGetHandleVerifier [0x0063327C+2759788]\n\tGetHandleVerifier [0x00435740+672048]\n\t(No symbol) [0x00338872]\n\t(No symbol) [0x003341C8]\n\t(No symbol) [0x003342AB]\n\t(No symbol) [0x003271B7]\n\tBaseThreadInitThunk [0x77287D49+25]\n\tRtlInitializeExceptionChain [0x7787B74B+107]\n\tRtlClearBits [0x7787B6CF+191]", "trace": "self = <test_cases.test_web.TestWeb object at 0x000001F77B9E0710>\n\n    @allure.title(\"TC01: Login to Grafana\")\n    @allure.description(\"Verify a successful login to Grafana\")\n    @pytest.mark.sanity\n    @pytest.mark.run_this\n    def test_verify_login(self):\n>       WebFlows.login_flow(get_data('Username'), get_data('Password'))\n\ntest_cases\\test_web.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nworkflows\\web_flows.py:21: in login_flow\n    UiActions.click(page.web_login.get_skip())\npage_objects\\web_objects\\login_page.py:24: in get_skip\n    return self.driver.find_element(skip_button[0], skip_button[1])\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py:104: in find_element\n    return self._dispatch(\"find\", (by, value, self._driver), \"find_element\", (by, value))\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py:114: in _dispatch\n    result = getattr(self._driver, d_call)(*d_args)\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:831: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F77CD96BD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x77287D49+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7787B74B+107]\\\\n\\\\tRtlClearBits [0x7787B6CF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='Skip']\"}\nE         (Session info: chrome=112.0.5615.139)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0039DCE3+50899]\nE       \t(No symbol) [0x0032E111]\nE       \t(No symbol) [0x00235588]\nE       \t(No symbol) [0x002608F9]\nE       \t(No symbol) [0x00260AFB]\nE       \t(No symbol) [0x0028F902]\nE       \t(No symbol) [0x0027B944]\nE       \t(No symbol) [0x0028E01C]\nE       \t(No symbol) [0x0027B6F6]\nE       \t(No symbol) [0x00257708]\nE       \t(No symbol) [0x0025886D]\nE       \tGetHandleVerifier [0x00603EAE+2566302]\nE       \tGetHandleVerifier [0x006392B1+2784417]\nE       \tGetHandleVerifier [0x0063327C+2759788]\nE       \tGetHandleVerifier [0x00435740+672048]\nE       \t(No symbol) [0x00338872]\nE       \t(No symbol) [0x003341C8]\nE       \t(No symbol) [0x003342AB]\nE       \t(No symbol) [0x003271B7]\nE       \tBaseThreadInitThunk [0x77287D49+25]\nE       \tRtlInitializeExceptionChain [0x7787B74B+107]\nE       \tRtlClearBits [0x7787B6CF+191]\n\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException"}, "description": "Verify a successful login to Grafana", "steps": [{"name": "Login to Grafana flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='Skip']\"}\n  (Session info: chrome=112.0.5615.139)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0039DCE3+50899]\n\t(No symbol) [0x0032E111]\n\t(No symbol) [0x00235588]\n\t(No symbol) [0x002608F9]\n\t(No symbol) [0x00260AFB]\n\t(No symbol) [0x0028F902]\n\t(No symbol) [0x0027B944]\n\t(No symbol) [0x0028E01C]\n\t(No symbol) [0x0027B6F6]\n\t(No symbol) [0x00257708]\n\t(No symbol) [0x0025886D]\n\tGetHandleVerifier [0x00603EAE+2566302]\n\tGetHandleVerifier [0x006392B1+2784417]\n\tGetHandleVerifier [0x0063327C+2759788]\n\tGetHandleVerifier [0x00435740+672048]\n\t(No symbol) [0x00338872]\n\t(No symbol) [0x003341C8]\n\t(No symbol) [0x003342AB]\n\t(No symbol) [0x003271B7]\n\tBaseThreadInitThunk [0x77287D49+25]\n\tRtlInitializeExceptionChain [0x7787B74B+107]\n\tRtlClearBits [0x7787B6CF+191]\n\n", "trace": "  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\workflows\\web_flows.py\", line 21, in login_flow\n    UiActions.click(page.web_login.get_skip())\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\page_objects\\web_objects\\login_page.py\", line 24, in get_skip\n    return self.driver.find_element(skip_button[0], skip_button[1])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py\", line 104, in find_element\n    return self._dispatch(\"find\", (by, value, self._driver), \"find_element\", (by, value))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py\", line 114, in _dispatch\n    result = getattr(self._driver, d_call)(*d_args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 831, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Updating text", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000001F77CDC7FD0>"}, {"name": "value", "value": "'admin'"}], "start": 1683393540109, "stop": 1683393540286}, {"name": "Updating text", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000001F77CE1FC90>"}, {"name": "value", "value": "'kfdkf'"}], "start": 1683393540304, "stop": 1683393540448}, {"name": "Click on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000001F77CE283D0>"}], "start": 1683393540470, "stop": 1683393540591}], "parameters": [{"name": "user", "value": "'admin'"}, {"name": "password", "value": "'kfdkf'"}], "start": 1683393540087, "stop": 1683393543640}], "attachments": [{"source": "804bc5ff-e941-4725-989f-2b1b1a5e656e-attachment.png", "type": "image/png"}], "start": 1683393540086, "stop": 1683393543702, "uuid": "d6729d28-2212-4cac-a5aa-f8d6840b3d04", "historyId": "54e61a4397564b26acdf4b5fe208f939", "testCaseId": "4727d0277c9099c0888dae150522b402", "fullName": "test_cases.test_web.TestWeb#test_verify_login", "labels": [{"name": "tag", "value": "run_this"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_web_driver')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web"}, {"name": "subSuite", "value": "TestWeb"}, {"name": "host", "value": "BarLaptop"}, {"name": "thread", "value": "6028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web"}]}