{"name": "Test01: Login to grafana via DB", "status": "broken", "statusDetails": {"message": "mysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'comments' in 'where clause'", "trace": "self = <mysql.connector.connection_cext.CMySQLConnection object at 0x00000251A149AD90>, query = b'SELECT name,password FROM usersfinalprojectaut WHERE comments = \"correct\";'\nraw = False, buffered = False, raw_as_string = False\n\n    def cmd_query(\n        self,\n        query: StrOrBytes,\n        raw: Optional[bool] = None,\n        buffered: bool = False,\n        raw_as_string: bool = False,\n    ) -> Optional[Union[CextEofPacketType, CextResultType]]:\n        \"\"\"Send a query to the MySQL server\"\"\"\n        self.handle_unread_result()\n        if raw is None:\n            raw = self._raw\n        try:\n            if not isinstance(query, bytes):\n                query = query.encode(\"utf-8\")\n>           self._cmysql.query(\n                query,\n                raw=raw,\n                buffered=buffered,\n                raw_as_string=raw_as_string,\n                query_attrs=self._query_attrs,\n            )\nE           _mysql_connector.MySQLInterfaceError: Unknown column 'comments' in 'where clause'\n\nC:\\Program Files\\Python311\\Lib\\site-packages\\mysql\\connector\\connection_cext.py:608: MySQLInterfaceError\n\nThe above exception was the direct cause of the following exception:\n\nself = <test_cases.test_web_db.TestWebDB object at 0x00000251A0417710>\n\n    @allure.title('Test01: Login to grafana via DB')\n    @allure.description('This test verify login using elements taking from DB')\n    def test_verify_login_db(self):\n>       DBFlows.login_grafana_via_db()\n\ntest_web_db.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\workflows\\db_flows.py:12: in login_grafana_via_db\n    result = DBActions.get_query_result(columns, 'usersfinalprojectaut', 'comments', 'correct')\n..\\extensions\\db_actions.py:19: in get_query_result\n    db_cursor.execute(query)\nC:\\Program Files\\Python311\\Lib\\site-packages\\mysql\\connector\\cursor_cext.py:330: in execute\n    result = self._cnx.cmd_query(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <mysql.connector.connection_cext.CMySQLConnection object at 0x00000251A149AD90>, query = b'SELECT name,password FROM usersfinalprojectaut WHERE comments = \"correct\";'\nraw = False, buffered = False, raw_as_string = False\n\n    def cmd_query(\n        self,\n        query: StrOrBytes,\n        raw: Optional[bool] = None,\n        buffered: bool = False,\n        raw_as_string: bool = False,\n    ) -> Optional[Union[CextEofPacketType, CextResultType]]:\n        \"\"\"Send a query to the MySQL server\"\"\"\n        self.handle_unread_result()\n        if raw is None:\n            raw = self._raw\n        try:\n            if not isinstance(query, bytes):\n                query = query.encode(\"utf-8\")\n            self._cmysql.query(\n                query,\n                raw=raw,\n                buffered=buffered,\n                raw_as_string=raw_as_string,\n                query_attrs=self._query_attrs,\n            )\n        except MySQLInterfaceError as err:\n>           raise get_mysql_exception(\n                err.errno, msg=err.msg, sqlstate=err.sqlstate\n            ) from err\nE           mysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'comments' in 'where clause'\n\nC:\\Program Files\\Python311\\Lib\\site-packages\\mysql\\connector\\connection_cext.py:616: ProgrammingError"}, "description": "This test verify login using elements taking from DB", "steps": [{"name": "Login to grafana via data base flow", "status": "broken", "statusDetails": {"message": "mysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'comments' in 'where clause'\n", "trace": "  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\workflows\\db_flows.py\", line 12, in login_grafana_via_db\n    result = DBActions.get_query_result(columns, 'usersfinalprojectaut', 'comments', 'correct')\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\extensions\\db_actions.py\", line 19, in get_query_result\n    db_cursor.execute(query)\n  File \"C:\\Program Files\\Python311\\Lib\\site-packages\\mysql\\connector\\cursor_cext.py\", line 330, in execute\n    result = self._cnx.cmd_query(\n             ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Program Files\\Python311\\Lib\\site-packages\\mysql\\connector\\connection_cext.py\", line 616, in cmd_query\n    raise get_mysql_exception(\n"}, "steps": [{"name": "Get query result", "status": "broken", "statusDetails": {"message": "mysql.connector.errors.ProgrammingError: 1054 (42S22): Unknown column 'comments' in 'where clause'\n", "trace": "  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\extensions\\db_actions.py\", line 19, in get_query_result\n    db_cursor.execute(query)\n  File \"C:\\Program Files\\Python311\\Lib\\site-packages\\mysql\\connector\\cursor_cext.py\", line 330, in execute\n    result = self._cnx.cmd_query(\n             ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Program Files\\Python311\\Lib\\site-packages\\mysql\\connector\\connection_cext.py\", line 616, in cmd_query\n    raise get_mysql_exception(\n"}, "steps": [{"name": "Query Builder - WHERE statement", "status": "passed", "parameters": [{"name": "columns", "value": "['name', 'password']"}, {"name": "table", "value": "'usersfinalprojectaut'"}, {"name": "where_name", "value": "'comments'"}, {"name": "where_value", "value": "'correct'"}], "start": 1682758392450, "stop": 1682758392450}], "parameters": [{"name": "columns", "value": "['name', 'password']"}, {"name": "table", "value": "'usersfinalprojectaut'"}, {"name": "where_name", "value": "'comments'"}, {"name": "where_value", "value": "'correct'"}], "start": 1682758392450, "stop": 1682758392482}], "start": 1682758392450, "stop": 1682758392495}], "attachments": [{"source": "4351f16f-b214-4ef7-8d2b-0e05f8574ad6-attachment.png", "type": "image/png"}], "start": 1682758392450, "stop": 1682758392496, "uuid": "5b6ac112-eac0-4595-b44d-d21866e49565", "historyId": "cb4f7eb449700d3788ad0977123b76ab", "testCaseId": "f6507f6075cf19d536a0c321de8a35f5", "fullName": "test_cases.test_web_db.TestWebDB#test_verify_login_db", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_web_driver', 'init_db_connector')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_web_db"}, {"name": "subSuite", "value": "TestWebDB"}, {"name": "host", "value": "BarLaptop"}, {"name": "thread", "value": "24236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_web_db"}]}