{"name": "TC05: View only done tasks", "status": "broken", "statusDetails": {"message": "TypeError: 'EventFiringWebElement' object is not subscriptable", "trace": "self = <test_cases.test_electron.TestElectron object at 0x0000020C5DADDE10>\n\n    @allure.title(\"TC05: View only done tasks\")\n    @allure.description(\"Mark task as completed and filter the list to display only done tasks\")\n    @pytest.mark.run_this\n    def test_filter_to_completed_tasks(self):\n        ElectronFlows.click_task_checkbox(0)\n        ElectronFlows.click_task_checkbox(1)\n>       ElectronFlows.filter_to_tasks_completed()\n\ntest_electron.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\workflows\\electron_flows.py:39: in filter_to_tasks_completed\n    wait(\"element_to_be_clickable\", page.electron_task.get_completed_filter())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfor_element = 'element_to_be_clickable', elem = <selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000020C5DE89250>\n\n    def wait(for_element, elem):\n        if for_element == 'element_exist':\n            WebDriverWait(conf.driver, int(get_data('WaitTime'))).until(EC.presence_of_element_located((elem[0], elem[1])))\n    \n        elif for_element == 'element_displayed':\n            WebDriverWait(conf.driver, int(get_data('WaitTime'))).until(\n                EC.visibility_of_element_located((elem[0], elem[1])))\n    \n        elif for_element == 'element_to_be_clickable':\n            WebDriverWait(conf.driver, int(get_data('WaitTime'))).until(\n>               EC.element_to_be_clickable((elem[0], elem[1])))\nE           TypeError: 'EventFiringWebElement' object is not subscriptable\n\n..\\utilities\\common_ops.py:68: TypeError"}, "description": "Mark task as completed and filter the list to display only done tasks", "steps": [{"name": "Click on the first task complete checkbox", "status": "passed", "steps": [{"name": "Click on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000020C5DE83CD0>"}], "start": 1699017158293, "stop": 1699017158350}], "parameters": [{"name": "i", "value": "0"}], "start": 1699017158279, "stop": 1699017158350}, {"name": "Click on the first task complete checkbox", "status": "passed", "steps": [{"name": "Click on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000020C5DE88390>"}], "start": 1699017158358, "stop": 1699017158423}], "parameters": [{"name": "i", "value": "1"}], "start": 1699017158350, "stop": 1699017158423}, {"name": "Filter the list to show only completed tasks", "status": "broken", "statusDetails": {"message": "TypeError: 'EventFiringWebElement' object is not subscriptable\n", "trace": "  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\workflows\\electron_flows.py\", line 39, in filter_to_tasks_completed\n    wait(\"element_to_be_clickable\", page.electron_task.get_completed_filter())\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\utilities\\common_ops.py\", line 68, in wait\n    EC.element_to_be_clickable((elem[0], elem[1])))\n                                ~~~~^^^\n"}, "steps": [{"name": "Click on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000020C5DE88B10>"}], "start": 1699017158436, "stop": 1699017158499}], "start": 1699017158423, "stop": 1699017158518}], "attachments": [{"source": "99560897-0cc3-401b-b42d-fbcf16578d10-attachment.png", "type": "image/png"}], "start": 1699017158279, "stop": 1699017158534, "uuid": "d6fac9ba-9bab-4f97-89b0-48b77007196f", "historyId": "64e71feafb24422b054d28921122a9d2", "testCaseId": "1c241c55a179e1d1662c6ed9ab64c283", "fullName": "test_cases.test_electron.TestElectron#test_filter_to_completed_tasks", "labels": [{"name": "tag", "value": "run_this"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_electron_driver')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_electron"}, {"name": "subSuite", "value": "TestElectron"}, {"name": "host", "value": "BarLaptop"}, {"name": "thread", "value": "16188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_electron"}]}