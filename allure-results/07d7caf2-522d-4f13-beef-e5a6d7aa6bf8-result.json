{"name": "TC05: Verify transaction date and hour", "status": "failed", "statusDetails": {"message": "AssertionError: Verify Equals Failed, Actual: Mon Sep 18 12:51 2023 is not equal to Expected: Mon Sep 18 12:52 2023", "trace": "self = <test_cases.test_mobile.TestMobile object at 0x0000024490D17550>\n\n    @allure.title(\"TC05: Verify transaction date and hour\")\n    @allure.description(\"this test Verify that transaction saved on the current date and hour (not including seconds)\")\n    def test_verify_time(self):\n        MobileFlows.swipe_screen(Direction.RIGHT)\n        MobileFlows.mortgage_flow('1000', '10', '10', Save.YES)\n        MobileFlows.check_current_time()\n        MobileFlows.swipe_screen(Direction.LEFT)\n        MobileFlows.check_trans_time()\n        # Verify saved on message shows the correct date\n        Verifications.verify_equals('Saved on ' + MobileFlows.check_current_time()[0],\n                                    MobileFlows.check_trans_time()[0])\n        # Verify the header full date is correct\n>       Verifications.verify_equals(MobileFlows.check_trans_time()[1], MobileFlows.check_current_time()[1])\n\ntest_mobile.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nactual = 'Mon Sep 18 12:51 2023', expected = 'Mon Sep 18 12:52 2023'\n\n    @staticmethod\n    @allure.step(\"Verify list of actual elements is equal to expected elements\")\n    def verify_equals(actual, expected):\n>       assert actual == expected, f'Verify Equals Failed, Actual: {str(actual)} is not equal to Expected: {str(expected)}'\nE       AssertionError: Verify Equals Failed, Actual: Mon Sep 18 12:51 2023 is not equal to Expected: Mon Sep 18 12:52 2023\n\n..\\extensions\\verifications.py:12: AssertionError"}, "description": "this test Verify that transaction saved on the current date and hour (not including seconds)", "steps": [{"name": "Swipe the page", "status": "passed", "steps": [{"name": "Swipe screen", "status": "passed", "parameters": [{"name": "start_x", "value": "108.0"}, {"name": "start_y", "value": "1320.0"}, {"name": "end_x", "value": "972.0"}, {"name": "end_y", "value": "1320.0"}, {"name": "duration", "value": "200"}], "start": 1695030707886, "stop": 1695030708544}], "parameters": [{"name": "direction", "value": "'right'"}], "start": 1695030707886, "stop": 1695030708544}, {"name": "Fill in mortgage details flow", "status": "passed", "steps": [{"name": "Updating text", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x00000244911B2F50>"}, {"name": "value", "value": "'1000'"}], "start": 1695030709287, "stop": 1695030710156}, {"name": "Updating text", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x00000244911B3790>"}, {"name": "value", "value": "'10'"}], "start": 1695030710268, "stop": 1695030711421}, {"name": "Updating text", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x00000244911B3A50>"}, {"name": "value", "value": "'10'"}], "start": 1695030711649, "stop": 1695030712672}, {"name": "Click on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x00000244911B1450>"}], "start": 1695030712888, "stop": 1695030714981}, {"name": "Click on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x00000244912F3890>"}], "start": 1695030716030, "stop": 1695030718230}], "parameters": [{"name": "amount", "value": "'1000'"}, {"name": "term", "value": "'10'"}, {"name": "rate", "value": "'10'"}, {"name": "save", "value": "True"}], "start": 1695030708544, "stop": 1695030718230}, {"name": "Check current time", "status": "passed", "start": 1695030718230, "stop": 1695030718231}, {"name": "Swipe the page", "status": "passed", "steps": [{"name": "Swipe screen", "status": "passed", "parameters": [{"name": "start_x", "value": "972.0"}, {"name": "start_y", "value": "1320.0"}, {"name": "end_x", "value": "108.0"}, {"name": "end_y", "value": "1320.0"}, {"name": "duration", "value": "200"}], "start": 1695030718231, "stop": 1695030719233}], "parameters": [{"name": "direction", "value": "'left'"}], "start": 1695030718231, "stop": 1695030719233}, {"name": "Check transaction time", "status": "passed", "start": 1695030719233, "stop": 1695030720536}, {"name": "Check current time", "status": "passed", "start": 1695030720536, "stop": 1695030720536}, {"name": "Check transaction time", "status": "passed", "start": 1695030720536, "stop": 1695030721185}, {"name": "Verify list of actual elements is equal to expected elements", "status": "passed", "parameters": [{"name": "actual", "value": "'Saved on 18-09-2023'"}, {"name": "expected", "value": "'Saved on 18-09-2023'"}], "start": 1695030721185, "stop": 1695030721185}, {"name": "Check transaction time", "status": "passed", "start": 1695030721185, "stop": 1695030722522}, {"name": "Check current time", "status": "passed", "start": 1695030722522, "stop": 1695030722522}, {"name": "Verify list of actual elements is equal to expected elements", "status": "failed", "statusDetails": {"message": "AssertionError: Verify Equals Failed, Actual: Mon Sep 18 12:51 2023 is not equal to Expected: Mon Sep 18 12:52 2023\n", "trace": "  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\extensions\\verifications.py\", line 12, in verify_equals\n    assert actual == expected, f'Verify Equals Failed, Actual: {str(actual)} is not equal to Expected: {str(expected)}'\n"}, "parameters": [{"name": "actual", "value": "'Mon Sep 18 12:51 2023'"}, {"name": "expected", "value": "'Mon Sep 18 12:52 2023'"}], "start": 1695030722522, "stop": 1695030722522}], "attachments": [{"source": "640ad276-1374-4579-84c0-c37dab171bc1-attachment.png", "type": "image/png"}], "start": 1695030707886, "stop": 1695030722524, "uuid": "450283b1-8c4c-4b21-ba22-7ea716394d1d", "historyId": "8615f8405e1d54a504832959380c2767", "testCaseId": "e72a2e047cc131c9174f98f332043a9b", "fullName": "test_cases.test_mobile.TestMobile#test_verify_time", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_mobile_driver')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_mobile"}, {"name": "subSuite", "value": "TestMobile"}, {"name": "host", "value": "BarLaptop"}, {"name": "thread", "value": "15900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_mobile"}]}