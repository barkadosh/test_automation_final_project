{"name": "TC03: Negative test - Verify transaction is deleted", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element (An element could not be located on the page using the given search parameters (ID='btnDel'))", "trace": "self = <test_cases.test_mobile.TestMobile object at 0x000001EFEA676F90>\n\n    @allure.title(\"TC03: Negative test - Verify transaction is deleted\")\n    @allure.description(\"this test verify transaction deleted transaction doesn't appears in the app\")\n    @pytest.mark.sanity\n    def test_delete_saved_trans(self):\n        MobileFlows.delete_saved_trans()\n        MobileFlows.verify_trans_is_deleted('59.36')\n>       MobileFlows.delete_saved_trans()\n\ntest_mobile.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\workflows\\mobile_flows.py:78: in delete_saved_trans\n    MobileActions.tap(page.mobile_save.get_delete())\n..\\page_objects\\mobile_objects\\saved_page.py:29: in get_delete\n    return self.driver.find_element(delete[0], delete[1])\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py:101: in find_element\n    return self._dispatch(\"find\", (by, value, self._driver), \"find_element\", (by, value))\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py:160: in _dispatch\n    raise e\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py:157: in _dispatch\n    result = getattr(self._driver, d_call)(*d_args)\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:414: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:31: in check_response\n    raise wde\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EFEA55DDD0>\nresponse = {'status': 404, 'value': '{\"sessionId\":\"4c2773f4-f1f9-433a-b3fa-d43a1b8229bf\",\"value\":{\"message\":\"no such element (An element could not be located on the page using the given search parameters (ID=\\'btnDel\\')) \"},\"status\":7}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element (An element could not be located on the page using the given search parameters (ID='btnDel'))\n\n..\\..\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException"}, "description": "this test verify transaction deleted transaction doesn't appears in the app", "steps": [{"name": "Delete saved transaction", "status": "passed", "steps": [{"name": "Tap on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000001EFEAB1B410>"}, {"name": "times", "value": "1"}], "start": 1694989082445, "stop": 1694989082588}, {"name": "Tap on element", "status": "passed", "parameters": [{"name": "elem", "value": "<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x000001EFEAB093D0>"}, {"name": "times", "value": "1"}], "start": 1694989083615, "stop": 1694989083758}], "start": 1694989082171, "stop": 1694989083758}, {"name": "Verify saved transaction is deleted", "status": "passed", "parameters": [{"name": "repayment_amount", "value": "'59.36'"}], "start": 1694989083758, "stop": 1694989094019}, {"name": "Delete saved transaction", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element (An element could not be located on the page using the given search parameters (ID='btnDel')) \n\n", "trace": "  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\workflows\\mobile_flows.py\", line 78, in delete_saved_trans\n    MobileActions.tap(page.mobile_save.get_delete())\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\page_objects\\mobile_objects\\saved_page.py\", line 29, in get_delete\n    return self.driver.find_element(delete[0], delete[1])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py\", line 101, in find_element\n    return self._dispatch(\"find\", (by, value, self._driver), \"find_element\", (by, value))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py\", line 160, in _dispatch\n    raise e\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\event_firing_webdriver.py\", line 157, in _dispatch\n    result = getattr(self._driver, d_call)(*d_args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py\", line 414, in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 31, in check_response\n    raise wde\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 26, in check_response\n    super().check_response(response)\n  File \"C:\\Automation\\Hobiz_Automation\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1694989094019, "stop": 1694989104348}], "attachments": [{"source": "985b6ea8-29b5-4b80-80aa-85f170b6af12-attachment.png", "type": "image/png"}, {"source": "8dda3a4e-1b60-4c5e-b87a-39084d4db228-attachment.png", "type": "image/png"}], "start": 1694989082171, "stop": 1694989104351, "uuid": "45890970-9dca-4872-8241-efbaa2448cb2", "historyId": "91ba5437dc241a31496b60115187fa52", "testCaseId": "7e8eca1073d7403bc815e56ae1ddf278", "fullName": "test_cases.test_mobile.TestMobile#test_delete_saved_trans", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_mobile_driver')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_mobile"}, {"name": "subSuite", "value": "TestMobile"}, {"name": "host", "value": "BarLaptop"}, {"name": "thread", "value": "7544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_mobile"}]}