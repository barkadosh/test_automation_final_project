{"uid":"3bfc015946333fd1","name":"TC02: Add and verify new tasks","fullName":"test_cases.test_electron.TestElectron#test_add_and_verify_tasks","historyId":"6f3b55deb17a3077aeb592b874292751","time":{"start":1682795417296,"stop":1682795417737,"duration":441},"description":"Add 3 new task to the electron app and verify 3 task was added","descriptionHtml":"<p>Add 3 new task to the electron app and verify 3 task was added</p>\n","status":"failed","statusMessage":"AssertionError: Verify Equals Failed, Actual: 3 is not equal to Expected: 4","statusTrace":"self = <test_cases.test_electron.TestElectron object at 0x0000023918B3BC90>\n\n    @allure.title(\"TC02: Add and verify new tasks\")\n    @allure.description(\"Add 3 new task to the electron app and verify 3 task was added\")\n    def test_add_and_verify_tasks(self):\n        ElectronFlows.add_new_task_flow('Test2')\n        ElectronFlows.add_new_task_flow('Test3')\n        ElectronFlows.add_new_task_flow('Test4')\n>       Verifications.verify_equals(ElectronFlows.get_number_of_task_flow(),4)\n\ntest_cases\\test_electron.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 3, expected = 4\n\n    @staticmethod\n    @allure.step(\"Verify element is equal to expected\")\n    def verify_equals(actual, expected):\n>       assert actual == expected, f'Verify Equals Failed, Actual: {str(actual)} is not equal to Expected: {str(expected)}'\nE       AssertionError: Verify Equals Failed, Actual: 3 is not equal to Expected: 4\n\nextensions\\verifications.py:11: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_electron_driver","time":{"start":1682795404923,"stop":1682795412508,"duration":7585},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"_xunit_setup_method_fixture_TestElectron","time":{"start":1682795417295,"stop":1682795417296,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Add 3 new task to the electron app and verify 3 task was added","status":"failed","statusMessage":"AssertionError: Verify Equals Failed, Actual: 3 is not equal to Expected: 4","statusTrace":"self = <test_cases.test_electron.TestElectron object at 0x0000023918B3BC90>\n\n    @allure.title(\"TC02: Add and verify new tasks\")\n    @allure.description(\"Add 3 new task to the electron app and verify 3 task was added\")\n    def test_add_and_verify_tasks(self):\n        ElectronFlows.add_new_task_flow('Test2')\n        ElectronFlows.add_new_task_flow('Test3')\n        ElectronFlows.add_new_task_flow('Test4')\n>       Verifications.verify_equals(ElectronFlows.get_number_of_task_flow(),4)\n\ntest_cases\\test_electron.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 3, expected = 4\n\n    @staticmethod\n    @allure.step(\"Verify element is equal to expected\")\n    def verify_equals(actual, expected):\n>       assert actual == expected, f'Verify Equals Failed, Actual: {str(actual)} is not equal to Expected: {str(expected)}'\nE       AssertionError: Verify Equals Failed, Actual: 3 is not equal to Expected: 4\n\nextensions\\verifications.py:11: AssertionError","steps":[{"name":"Add new task flow","time":{"start":1682795417297,"stop":1682795417435,"duration":138},"status":"passed","steps":[{"name":"Updating text","time":{"start":1682795417309,"stop":1682795417381,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919E978D0>"},{"name":"value","value":"'Test2'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true},{"name":"Updating text","time":{"start":1682795417389,"stop":1682795417435,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919E971D0>"},{"name":"value","value":"''"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"task_name","value":"'Test2'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":2,"hasContent":true},{"name":"Add new task flow","time":{"start":1682795417435,"stop":1682795417567,"duration":132},"status":"passed","steps":[{"name":"Updating text","time":{"start":1682795417444,"stop":1682795417511,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919EBCF50>"},{"name":"value","value":"'Test3'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true},{"name":"Updating text","time":{"start":1682795417517,"stop":1682795417567,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919EBD750>"},{"name":"value","value":"''"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"task_name","value":"'Test3'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":2,"hasContent":true},{"name":"Add new task flow","time":{"start":1682795417567,"stop":1682795417701,"duration":134},"status":"passed","steps":[{"name":"Updating text","time":{"start":1682795417575,"stop":1682795417637,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919E96BD0>"},{"name":"value","value":"'Test4'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true},{"name":"Updating text","time":{"start":1682795417646,"stop":1682795417701,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919E9E610>"},{"name":"value","value":"''"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[{"name":"task_name","value":"'Test4'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":2,"hasContent":true},{"name":"Get the number of tasks flow","time":{"start":1682795417701,"stop":1682795417710,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"Verify element is equal to expected","time":{"start":1682795417710,"stop":1682795417710,"duration":0},"status":"failed","statusMessage":"AssertionError: Verify Equals Failed, Actual: 3 is not equal to Expected: 4\n","statusTrace":"  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\extensions\\verifications.py\", line 11, in verify_equals\n    assert actual == expected, f'Verify Equals Failed, Actual: {str(actual)} is not equal to Expected: {str(expected)}'\n","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"3"},{"name":"expected","value":"4"}],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"b3a333b9b7349825","name":"5fad2eac-b74c-4a0b-808e-a477574b0fa7-attachment.png","source":"b3a333b9b7349825.png","type":"image/png","size":34262}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":11,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestElectron::0","time":{"start":1682795418315,"stop":1682795421952,"duration":3637},"status":"passed","steps":[{"name":"Delete all tasks from the list","time":{"start":1682795418315,"stop":1682795419951,"duration":1636},"status":"passed","steps":[{"name":"Get the number of tasks flow","time":{"start":1682795418315,"stop":1682795418321,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false},{"name":"Mouse hover tooltip","time":{"start":1682795418834,"stop":1682795418871,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919E931D0>"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true},{"name":"Mouse hover tooltip","time":{"start":1682795419384,"stop":1682795419408,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919E91B90>"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true},{"name":"Mouse hover tooltip","time":{"start":1682795419919,"stop":1682795419951,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.support.event_firing_webdriver.EventFiringWebElement object at 0x0000023919E93890>"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":4,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":5,"hasContent":true},{"name":"init_electron_driver::0","time":{"start":1682795421955,"stop":1682795426088,"duration":4133},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_electron_driver')"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_electron"},{"name":"subSuite","value":"TestElectron"},{"name":"host","value":"BarLaptop"},{"name":"thread","value":"15668-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_electron"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init_electron_driver')"]},"source":"3bfc015946333fd1.json","parameterValues":[]}