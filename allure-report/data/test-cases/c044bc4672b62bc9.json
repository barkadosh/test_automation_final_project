{"uid":"c044bc4672b62bc9","name":"TC01: Adding 2 numbers","fullName":"test_cases.test_desktop.TestDesktopApp#test_add_numbers_and_verify","historyId":"2295b68a7d75dd676d382231d5beaf06","time":{"start":1684578135884,"stop":1684578135884,"duration":0},"description":"This test adds 2 numbers and verify the result","descriptionHtml":"<p>This test adds 2 numbers and verify the result</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: Failed to locate opened application window with appId: Microsoft.WindowsCalculator_8wekyb3d8bbwe!App, and processId: 11256","statusTrace":"request = <SubRequest 'init_desktop_driver' for <Function test_add_numbers_and_verify>>\n\n    @pytest.fixture(scope=\"class\")\n    def init_desktop_driver(request):\n>       edriver = get_desktop_driver()\n\ntest_cases\\conftest.py:107: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_cases\\conftest.py:168: in get_desktop_driver\n    driver = appium.webdriver.Remote(get_data('WinAppDriverService'), dc)\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\appium\\webdriver\\webdriver.py:267: in __init__\n    super().__init__(\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\appium\\webdriver\\webdriver.py:357: in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000263669FD310>\nresponse = {'status': 500, 'value': '{\"status\":13,\"value\":{\"error\":\"unknown error\",\"message\":\"Failed to locate opened application window with appId: Microsoft.WindowsCalculator_8wekyb3d8bbwe!App, and processId: 11256\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Failed to locate opened application window with appId: Microsoft.WindowsCalculator_8wekyb3d8bbwe!App, and processId: 11256\n\nC:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":true,"beforeStages":[{"name":"init_desktop_driver","time":{"start":1684578135899,"stop":1684578141652,"duration":5753},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: Failed to locate opened application window with appId: Microsoft.WindowsCalculator_8wekyb3d8bbwe!App, and processId: 11256\n\n","statusTrace":"  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\_pytest\\fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\_pytest\\fixtures.py\", line 901, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\test_cases\\conftest.py\", line 107, in init_desktop_driver\n    edriver = get_desktop_driver()\n              ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Automation\\Final_Proj_Aut_Py\\test_cases\\conftest.py\", line 168, in get_desktop_driver\n    driver = appium.webdriver.Remote(get_data('WinAppDriverService'), dc)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\appium\\webdriver\\webdriver.py\", line 267, in __init__\n    super().__init__(\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 157, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\appium\\webdriver\\webdriver.py\", line 357, in start_session\n    response = self.execute(RemoteCommand.NEW_SESSION, parameters)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\barka\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_desktop_driver')"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_desktop"},{"name":"subSuite","value":"TestDesktopApp"},{"name":"host","value":"BarLaptop"},{"name":"thread","value":"20376-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_desktop"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fb4a21b9f56de6fe","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4723): Max retries exceeded with url: /session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000025E86263B50>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))","time":{"start":1683786372297,"stop":1683786372297,"duration":0}},{"uid":"95d0f46e56c919","status":"failed","statusDetails":"AssertionError: Verify Equals Failed, Actual: 7 is not equal to Expected: 8","time":{"start":1683398541190,"stop":1683398544684,"duration":3494}},{"uid":"13cf6ba0d3128bdb","status":"failed","statusDetails":"AssertionError: Verify Equals Failed, Actual: 7 is not equal to Expected: 8","time":{"start":1683398490541,"stop":1683398495065,"duration":4524}},{"uid":"509982e88d5be113","status":"passed","time":{"start":1683382263339,"stop":1683382266292,"duration":2953}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":2,"unknown":0,"total":4},"items":[{"uid":"31a629540c7fc98e","reportUrl":"http://jenkins:9090/job/Final%20Proj%20Electron%20Tests/8/allure/#testresult/31a629540c7fc98e","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=4723): Max retries exceeded with url: /session (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000025E86263B50>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))","time":{"start":1683786372297,"stop":1683786372297,"duration":0}},{"uid":"947bf8b4c7f59121","reportUrl":"http://jenkins:9090/job/Final%20Proj%20Electron%20Tests/7/allure/#testresult/947bf8b4c7f59121","status":"passed","time":{"start":1683382263339,"stop":1683382266292,"duration":2953}},{"uid":"f5d07a65a7857cb3","reportUrl":"http://jenkins:9090/job/Final%20Proj%20Electron%20Tests/6/allure/#testresult/f5d07a65a7857cb3","status":"passed","time":{"start":1683381664631,"stop":1683381667767,"duration":3136}}]},"tags":["@pytest.mark.usefixtures('init_desktop_driver')"]},"source":"c044bc4672b62bc9.json","parameterValues":[]}